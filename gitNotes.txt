using git powershell interface
==============================

  need to cd to dir that holds repo

  git status
    shows current status of the local repo
    there does not appear to be a way to check if the local repo is out of date other than git fetch or pull

  git pull
    merge changes into local repository

  git clone
    creates a new local repo from a remote one
    cd to parent dir
    run git clone. makes a new dir with the repo name
    eg to create repo in note/WebProgramming
    cd to notes
    type:
      git clone git@github.com:LunaticHowl/WebProgramming.git
    Creates new sub-dir (WebProgramming) with repo

if you use the windows app it to clone a repo it will be put in the default dir which is user...documents
you can set the default dir but not sure if you can force the windows app to prompt for dir where to put repo

commit and push
  watched files are in 1 of 3 states. unmodified, modified or staged
    git add -> changes modified to staged
    git commit -> staged to unmodified
    git push -> updated remote repo
  to skip the add step do (*1)
    git commit -a
  if you don't specify a message in the commit, git will open a file in your default text editor.
  to avoid this do
    git commit -a -m"some message here"
  or
    git commit --allow-empty-message

  (*1) the -a switch will add new files but will not add a new directory. If you add a directory to the project you need to still run "git add dirName/"

  commit is local only and commits changes to the local branch
  push actually updates the repo on Github

if you have added new files to the repo then you still need to call git add
eg
  git add some/new/file.txt
(git add is used for multiple tasks)
if you deleted files in the local you need "git rm" to remove them in the local repo
  and the next push will remove them in the remote repo

To stop tracking a file that is currently tracked, use git rm --cached
This removes the file from the repo.
  eg
    git rm --cached client/app/BMNext.sublime-workspace
  without "--cached" git will remove the file from both the repo *and* the working directory (deletes the actual file)

To stop watching the file use the .gitignore or ...\.git\info\exclude file
you should use ...\.git\info\exclude to ignore files that are unique to your work flow
  eg project files created by  your editor
the .gitignore file in the project root should be used to list files that should be ignored by all users


good summary of
  tracked or untracked files
  unmodified, modified, and staged files
  add, commit, push, rm and diff commands
    http://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository

Delete a local repository
  Delete the .git directory in the root-directory of your repository if you only want to delete the git-related information (branches, versions).
  If you want to delete everything (git-data, code, etc), just delete the whole directory.

commands to clean up and shrink repo (.git dir)
  git gc --aggressive
  git repack

test if a pull is needed
  git remote update
  git status

get timestamp of most recent commit(s)
  git log -N
    where N is the count of log entries to display
  eg
  git log -1
    show log for most recent commit
